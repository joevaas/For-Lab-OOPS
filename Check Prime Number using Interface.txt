⚙️ Algorithm:

Start the program.

Create an interface named PrimeCheck with an abstract method isPrime(int n).

Create a class that implements the interface and defines the logic to check for prime numbers.

In the main() method, get input from the user.

Call the isPrime() method to determine if the number is prime.

Display the result.

End the program.

💻 Program:
import java.util.Scanner;

// Step 1: Define an interface
interface PrimeCheck {
    boolean isPrime(int n);
}

// Step 2: Implement the interface
class PrimeNumber implements PrimeCheck {
    public boolean isPrime(int n) {
        if (n <= 1)
            return false;
        for (int i = 2; i <= n / 2; i++) {
            if (n % i == 0)
                return false;
        }
        return true;
    }
}

// Step 3: Main class
public class PrimeInterfaceDemo {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();

        PrimeNumber obj = new PrimeNumber();

        if (obj.isPrime(num))
            System.out.println(num + " is a Prime Number.");
        else
            System.out.println(num + " is NOT a Prime Number.");

        sc.close();
    }
}

🖥️ Sample Output:
Enter a number: 13
13 is a Prime Number.

Enter a number: 20
20 is NOT a Prime Number.

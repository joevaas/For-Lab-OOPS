‚öôÔ∏è Algorithm (Selection Sort):

Start the program.

Take an array of n elements.

For each position i in the array:

Find the smallest element in the unsorted portion.

Swap it with the element at position i.

Repeat until the array is sorted.

Display the sorted array.

End.

‚öôÔ∏è Algorithm (Insertion Sort):

Start the program.

Take an array of n elements.

For each element from index 1 to n-1:

Store the element in a temporary variable key.

Compare key with all elements before it.

Shift elements greater than key one position to the right.

Insert key into the correct position.

Repeat until the array is sorted.

Display the sorted array.

End.

üíª Program:
import java.util.Scanner;

public class QuadraticSorting {
    
    // Selection Sort
    static void selectionSort(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }
            // Swap
            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }

    // Insertion Sort
    static void insertionSort(int arr[]) {
        int n = arr.length;
        for (int i = 1; i < n; i++) {
            int key = arr[i];
            int j = i - 1;
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

    // Display Array
    static void display(int arr[]) {
        for (int num : arr)
            System.out.print(num + " ");
        System.out.println();
    }

    // Main Function
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();
        int arr[] = new int[n];

        System.out.println("Enter elements:");
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt();

        int choice;
        do {
            System.out.println("\n--- Sorting Menu ---");
            System.out.println("1. Selection Sort");
            System.out.println("2. Insertion Sort");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            int[] temp = arr.clone();

            switch (choice) {
                case 1:
                    selectionSort(temp);
                    System.out.print("Sorted Array (Selection Sort): ");
                    display(temp);
                    break;

                case 2:
                    insertionSort(temp);
                    System.out.print("Sorted Array (Insertion Sort): ");
                    display(temp);
                    break;

                case 3:
                    System.out.println("Exiting...");
                    break;

                default:
                    System.out.println("Invalid choice!");
            }

        } while (choice != 3);

        sc.close();
    }
}

üñ•Ô∏è Sample Output:
Enter number of elements: 5
Enter elements:
50 20 40 10 30

--- Sorting Menu ---
1. Selection Sort
2. Insertion Sort
3. Exit
Enter your choice: 1
Sorted Array (Selection Sort): 10 20 30 40 50 

--- Sorting Menu ---
1. Selection Sort
2. Insertion Sort
3. Exit
Enter your choice: 2
Sorted Array (Insertion Sort): 10 20 30 40 50 

Enter your choice: 3
Exiting...
